apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: org-mongo-statefulset
spec:
  replicas: 8
  selector:
    matchLabels:
      app: org-mongo
  template:
    metadata:
      labels:
        app: org-mongo
    spec:
      containers:
        - name: org-mongo
          image: mongo:latest
          command:
            - "mongod"
            - "--bind_ip_all"
            - "--auth"
          ports:
            - containerPort: 27017
          envFrom:
            - secretRef:
                name: org-mongo-secret
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - >
                    sleep 5;
                    mongosh --eval "
                      try {
                        db.getSiblingDB('admin').createUser({
                          user: '$MONGO_INITDB_ROOT_USERNAME',
                          pwd: '$MONGO_INITDB_ROOT_PASSWORD',
                          roles: [ { role: 'root', db: 'admin' } ]
                        });
                        print('User created successfully.');
                      } catch (e) {
                        if (e.code === 51003) { // This is the 'UserAlreadyExists' error code
                          print('User already exists, skipping creation.');
                        } else {
                          print('An unexpected error occurred during user creation:');
                          printjson(e);
                        }
                      }
                    "
          volumeMounts:
            - name: org-mongo-persistent-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: org-mongo-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
